(()=>{var t={484:function(t){t.exports=function(){"use strict";var t=1e3,e=6e4,n=36e5,i="millisecond",r="second",s="minute",o="hour",a="day",d="week",c="month",u="quarter",h="year",l="date",p="Invalid Date",f=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,v=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,m={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},y=function(t,e,n){var i=String(t);return!i||i.length>=e?t:""+Array(e+1-i.length).join(n)+t},g={s:y,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),i=Math.floor(n/60),r=n%60;return(e<=0?"+":"-")+y(i,2,"0")+":"+y(r,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var i=12*(n.year()-e.year())+(n.month()-e.month()),r=e.clone().add(i,c),s=n-r<0,o=e.clone().add(i+(s?-1:1),c);return+(-(i+(n-r)/(s?r-o:o-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:d,d:a,D:l,h:o,m:s,s:r,ms:i,Q:u}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},$="en",w={};w[$]=m;var M=function(t){return t instanceof x},b=function t(e,n,i){var r;if(!e)return $;if("string"==typeof e){var s=e.toLowerCase();w[s]&&(r=s),n&&(w[s]=n,r=s);var o=e.split("-");if(!r&&o.length>1)return t(o[0])}else{var a=e.name;w[a]=e,r=a}return!i&&r&&($=r),r||!i&&$},S=function(t,e){if(M(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new x(n)},D=g;D.l=b,D.i=M,D.w=function(t,e){return S(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var x=function(){function m(t){this.$L=b(t.locale,null,!0),this.parse(t)}var y=m.prototype;return y.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(D.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var i=e.match(f);if(i){var r=i[2]-1||0,s=(i[7]||"0").substring(0,3);return n?new Date(Date.UTC(i[1],r,i[3]||1,i[4]||0,i[5]||0,i[6]||0,s)):new Date(i[1],r,i[3]||1,i[4]||0,i[5]||0,i[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},y.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},y.$utils=function(){return D},y.isValid=function(){return!(this.$d.toString()===p)},y.isSame=function(t,e){var n=S(t);return this.startOf(e)<=n&&n<=this.endOf(e)},y.isAfter=function(t,e){return S(t)<this.startOf(e)},y.isBefore=function(t,e){return this.endOf(e)<S(t)},y.$g=function(t,e,n){return D.u(t)?this[e]:this.set(n,t)},y.unix=function(){return Math.floor(this.valueOf()/1e3)},y.valueOf=function(){return this.$d.getTime()},y.startOf=function(t,e){var n=this,i=!!D.u(e)||e,u=D.p(t),p=function(t,e){var r=D.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return i?r:r.endOf(a)},f=function(t,e){return D.w(n.toDate()[t].apply(n.toDate("s"),(i?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},v=this.$W,m=this.$M,y=this.$D,g="set"+(this.$u?"UTC":"");switch(u){case h:return i?p(1,0):p(31,11);case c:return i?p(1,m):p(0,m+1);case d:var $=this.$locale().weekStart||0,w=(v<$?v+7:v)-$;return p(i?y-w:y+(6-w),m);case a:case l:return f(g+"Hours",0);case o:return f(g+"Minutes",1);case s:return f(g+"Seconds",2);case r:return f(g+"Milliseconds",3);default:return this.clone()}},y.endOf=function(t){return this.startOf(t,!1)},y.$set=function(t,e){var n,d=D.p(t),u="set"+(this.$u?"UTC":""),p=(n={},n[a]=u+"Date",n[l]=u+"Date",n[c]=u+"Month",n[h]=u+"FullYear",n[o]=u+"Hours",n[s]=u+"Minutes",n[r]=u+"Seconds",n[i]=u+"Milliseconds",n)[d],f=d===a?this.$D+(e-this.$W):e;if(d===c||d===h){var v=this.clone().set(l,1);v.$d[p](f),v.init(),this.$d=v.set(l,Math.min(this.$D,v.daysInMonth())).$d}else p&&this.$d[p](f);return this.init(),this},y.set=function(t,e){return this.clone().$set(t,e)},y.get=function(t){return this[D.p(t)]()},y.add=function(i,u){var l,p=this;i=Number(i);var f=D.p(u),v=function(t){var e=S(p);return D.w(e.date(e.date()+Math.round(t*i)),p)};if(f===c)return this.set(c,this.$M+i);if(f===h)return this.set(h,this.$y+i);if(f===a)return v(1);if(f===d)return v(7);var m=(l={},l[s]=e,l[o]=n,l[r]=t,l)[f]||1,y=this.$d.getTime()+i*m;return D.w(y,this)},y.subtract=function(t,e){return this.add(-1*t,e)},y.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||p;var i=t||"YYYY-MM-DDTHH:mm:ssZ",r=D.z(this),s=this.$H,o=this.$m,a=this.$M,d=n.weekdays,c=n.months,u=function(t,n,r,s){return t&&(t[n]||t(e,i))||r[n].slice(0,s)},h=function(t){return D.s(s%12||12,t,"0")},l=n.meridiem||function(t,e,n){var i=t<12?"AM":"PM";return n?i.toLowerCase():i},f={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:D.s(a+1,2,"0"),MMM:u(n.monthsShort,a,c,3),MMMM:u(c,a),D:this.$D,DD:D.s(this.$D,2,"0"),d:String(this.$W),dd:u(n.weekdaysMin,this.$W,d,2),ddd:u(n.weekdaysShort,this.$W,d,3),dddd:d[this.$W],H:String(s),HH:D.s(s,2,"0"),h:h(1),hh:h(2),a:l(s,o,!0),A:l(s,o,!1),m:String(o),mm:D.s(o,2,"0"),s:String(this.$s),ss:D.s(this.$s,2,"0"),SSS:D.s(this.$ms,3,"0"),Z:r};return i.replace(v,(function(t,e){return e||f[t]||r.replace(":","")}))},y.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},y.diff=function(i,l,p){var f,v=D.p(l),m=S(i),y=(m.utcOffset()-this.utcOffset())*e,g=this-m,$=D.m(this,m);return $=(f={},f[h]=$/12,f[c]=$,f[u]=$/3,f[d]=(g-y)/6048e5,f[a]=(g-y)/864e5,f[o]=g/n,f[s]=g/e,f[r]=g/t,f)[v]||g,p?$:D.a($)},y.daysInMonth=function(){return this.endOf(c).$D},y.$locale=function(){return w[this.$L]},y.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),i=b(t,e,!0);return i&&(n.$L=i),n},y.clone=function(){return D.w(this.$d,this)},y.toDate=function(){return new Date(this.valueOf())},y.toJSON=function(){return this.isValid()?this.toISOString():null},y.toISOString=function(){return this.$d.toISOString()},y.toString=function(){return this.$d.toUTCString()},m}(),E=x.prototype;return S.prototype=E,[["$ms",i],["$s",r],["$m",s],["$H",o],["$W",a],["$M",c],["$y",h],["$D",l]].forEach((function(t){E[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),S.extend=function(t,e){return t.$i||(t(e,x,S),t.$i=!0),S},S.locale=b,S.isDayjs=M,S.unix=function(t){return S(1e3*t)},S.en=w[$],S.Ls=w,S.p={},S}()}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var s=e[i]={exports:{}};return t[i].call(s.exports,s,s.exports,n),s.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";function t(t){try{return function(t){const e=t.replace(/^\s*\[|\]\s*$/g,"").trim().split(/,\s*/);if(2!==e.length)throw new Error("Некорректный формат ввода");const n=e.map((t=>t.replace(/−/g,"-"))),i=parseFloat(n[0]),r=parseFloat(n[1]);if(Number.isNaN(i)||Number.isNaN(r))throw new Error("Некорректные значения широты и долготы");return{latitude:i,longitude:r}}(t)}catch(t){return console.error(t.message),t.message}}class e{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.init()}init(){this.drawUi(),this.events()}drawUi(){this.container.innerHTML='\n      <div id="modal" class="modal">\n        <div class="modal-content">\n          <h4>Что-то пошло не так</h4>\n          <p>К сожалению, нам не удалось определить Ваше местоположение, пожалуйста, дайте разрешение на использование геолокации, либо введите координаты вручную</p>\n          <label for="geo">Широта и долгота через запятую</label>\n          <input name="geo" type="text" id="geo-input" class="geo-input" placeholder="51.50851, −0.12572" />\n          <div class="btn-modal-wrapper">\n            <button class="close-btn">Отмена</button>\n            <button class="add-geo">Ok</button>\n          </div>\n        </div>\n        <div class="error-container"></div>\n      </div>\n    ',this.modal=this.container.querySelector("#modal"),this.addButton=this.container.querySelector(".add-geo"),this.closeButton=this.container.querySelector(".close-btn"),this.input=this.container.querySelector("#geo-input"),this.error=this.container.querySelector(".error-container")}events(){this.input.addEventListener("click",(()=>{this.input.value="",this.hideError()}))}closeModal(){this.modal.remove()}showError(t){this.error.textContent=t,this.error.style.display="flex"}hideError(){this.error.style.display="none"}getCoords(){return this.coords}waitForOk(){return new Promise((e=>{this.addButton.addEventListener("click",(()=>{const n=this.input.value;if(n){const i=t(n);"string"==typeof i?this.showError(i):(this.coords=i,this.modal.style.display="none",e(this.getCoords()))}else this.showError("Пожалуйста, введите ваши координаты")})),this.closeButton.addEventListener("click",(()=>{this.closeModal(),e(null)}))}))}}class i{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.init()}init(){this.drawUi(),this.events()}drawUi(){this.container.innerHTML='\n      <div id="modal" class="modal">\n        <div class="modal-content">\n          <h4>Что-то пошло не так</h2>\n          <p>Пожалуйста, дайте разрешение на использование аудио- или видеозаписи, либо используйте другой браузер</p>\n          <p>\n            Чтобы изменить настройки разрешений для данного сайта, следуйте этим шагам:\n\n            Откройте страницу сайта, для которого вы хотите изменить разрешения.\n            Найдите значок "замка" или "восклицательного знака" слева от адресной строки браузера.\n            Нажмите на этот значок и выберите "Настройки сайта" или "Разрешения" (зависит от браузера).\n            Найдите настройку микрофона/камеры и измените ее на "Разрешить".\n            Закройте настройки и обновите страницу. Теперь сайт должен иметь доступ к микрофону/камере.\n          </p>\n          <div class="btn-modal-wrapper">\n            <button class="close-btn">Закрыть</button>\n          </div>\n        </div>\n      </div>\n    '}events(){document.querySelector(".close-btn").addEventListener("click",(()=>this.closeModal()))}closeModal(){this.container.innerHTML=""}}var r=n(484),s=n.n(r);class o{constructor(t,e,n,i){this.text=e,this.geo=t,this.mediaUrl=n,this.constraints=i,this.post=null,this.postsContainer=null,this.init()}init(){this.postsContainer=document.querySelector(".posts"),this.createPostMedia()}createPostMedia(){if(this.createPost(),this.mediaUrl){const{video:t}=this.constraints,e=t?"video":"audio",n=document.createElement(e);n.src=this.mediaUrl,n.controls=!0,n.crossOrigin="anonymous",this.post.querySelector(".post-content").appendChild(n)}this.postsContainer.appendChild(this.post)}createPost(){this.post=document.createElement("div"),this.post.classList.add("post"),this.post.innerHTML=`\n    <div class="post-date">${s()(Date.now()).format("DD.MM.YY HH:mm")}</div>\n    <div class="post-content">\n      \x3c!-- Здесь будет содержимое поста (текст, аудио или видео) --\x3e\n      <p class="text-post">${this.text}</p>\n    </div>\n    <div class="geodata">\n      [${this.geo.latitude}, ${this.geo.longitude}] \n      <span class="geodata-icon"></span>\n    </div>\n  `}}class a{constructor(t){this.container=t,this.textarea=null,this.modalMedia=null,this.timerInterval=null}init(){this.drawUi(),this.addEvents()}drawUi(){this.container.innerHTML='\n      <div class="modal-window"></div>\n      <section>\n        <h2>Лента постов</h2>\n        <div class="posts"></div>\n      \x3c!-- Посты будут добавляться здесь --\x3e\n      </section>\n      <section id="create-post">\n        <form name="post" id="post-form">\n          <div class="text-container">\n            <textarea id="post-content" rows="2" required></textarea>\n            <div class="media-button-wrapper">\n              <button class="btn audio-button" type="button"></button>\n              <button class="btn video-button" type="button"></button>\n            </div>\n            \n            <div class="media-action-wrapper">\n              <button class="btn start-media" type="button"></button>\n              <div id="timer" class="timer">00:00</div>\n              <button class="btn stop-media" type="button"></button>\n            </div>\n            \n          </div>\n        </form>\n      </section>\n    ',this.textarea=this.container.querySelector("#post-content"),this.startButton=this.container.querySelector(".start-media"),this.stopButton=this.container.querySelector(".stop-media"),this.audioButton=this.container.querySelector(".audio-button"),this.videoButton=this.container.querySelector(".video-button")}addEvents(){this.textarea.addEventListener("input",(()=>this.changeHeightTextarea())),this.textarea.addEventListener("keydown",(t=>this.addPost(t))),this.audioButton.addEventListener("click",(()=>this.writeMedia({audio:!0,video:!1}))),this.videoButton.addEventListener("click",(()=>this.writeMedia({audio:!0,video:!0}))),this.startButton.addEventListener("click",(()=>this.startRecording())),this.stopButton.addEventListener("click",(()=>this.stopRecording()))}changeHeightTextarea(){this.textarea.style.height="auto",this.textarea.style.height=`${this.textarea.scrollHeight}px`}async addPost(t){if("Enter"===t.key){t.preventDefault();const e=await this.getGeoData();e&&(this.post=new o(e,this.textarea.value),this.textarea.value="")}}async getGeoData(){if(!("geolocation"in navigator))return this.showModalGeo();try{const t=await new Promise(((t,e)=>{navigator.geolocation.getCurrentPosition((e=>t(e.coords)),(t=>e(t)))}));return{latitude:t.latitude,longitude:t.longitude}}catch{return this.showModalGeo()}}showModalGeo(){return new e(this.container.querySelector(".modal-window")).waitForOk()}writeMedia(t){this.toggleMediaButtonVisibility(),this.setupMediaRecorder(t)}toggleMediaButtonVisibility(){this.container.querySelector(".media-button-wrapper").style.display="none",this.container.querySelector(".media-action-wrapper").style.display="block"}async setupMediaRecorder(t){this.startButton.disabled=!0,this.chunks=[];try{const e=await navigator.mediaDevices.getUserMedia(t);this.recorder=new MediaRecorder(e),this.recorder.addEventListener("start",(()=>console.log("start media"))),this.recorder.addEventListener("dataavailable",(t=>this.chunks.push(t.data))),this.recorder.addEventListener("stop",(()=>this.handleRecordingStop(t))),this.startButton.disabled=!1}catch{this.handleError()}}handleRecordingStop(t){this.stopTimer();const e=a.createMediaUrl(this.chunks,t);this.getGeoData().then((n=>{this.post=new o(n,this.textarea.value,e,t),this.textarea.value="",this.container.querySelector(".media-button-wrapper").style.display="block",this.container.querySelector(".media-action-wrapper").style.display="none"})).catch((t=>this.handleError(t))),this.chunks=[]}handleError(){this.startButton.disabled=!1,this.modalMedia=new i(this.container.querySelector(".modal-window"))}static createMediaUrl(t,e){const n=e.video?"video/webm":"audio/ogg; codecs=opus",i=new Blob(t,{type:n});return URL.createObjectURL(i)}startRecording(){this.recorder&&(this.startButton.disabled=!0,this.stopButton.disabled=!1,this.recorder.start(),this.startTimer())}stopRecording(){this.startButton.disabled=!1,this.stopButton.disabled=!0,this.recorder&&"inactive"!==this.recorder.state&&this.recorder.stop()}startTimer(){let t=0,e=0;const n=document.getElementById("timer");n.textContent="00:00",this.timerInterval=setInterval((()=>{t+=1,60===t&&(e+=1,t=0);const i=String(e).padStart(2,"0"),r=String(t).padStart(2,"0");n.textContent=`${i}:${r}`}),1e3)}stopTimer(){clearInterval(this.timerInterval),this.container.querySelector("#timer").textContent="00:00"}}new a(document.getElementById("timeline-container")).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,